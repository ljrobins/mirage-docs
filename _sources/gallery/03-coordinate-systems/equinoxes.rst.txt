
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/03-coordinate-systems/equinoxes.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_03-coordinate-systems_equinoxes.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_03-coordinate-systems_equinoxes.py:


Equinoxes and Solstices
=======================

Visualizes the transformation from ITRF to J2000 over the course of a day and at special points of the year, highlighting the importance of the spring equinox

.. GENERATED FROM PYTHON SOURCE LINES 7-16

.. code-block:: Python


    import datetime

    import numpy as np
    import pyvista as pv

    import mirage as mr
    import mirage.vis as mrv








.. GENERATED FROM PYTHON SOURCE LINES 17-18

Let's set up a space of dates over a single day

.. GENERATED FROM PYTHON SOURCE LINES 18-24

.. code-block:: Python


    ntimes = 4
    date = mr.utc(2023, 12, 9, 12)
    bod = mr.beginning_of_day(date)
    dspace = mr.date_linspace(bod, bod + datetime.timedelta(days=1), ntimes)








.. GENERATED FROM PYTHON SOURCE LINES 25-26

We can use :class:`mr.EarthFixedFrame` to set up the coordinate frame transformation we are about.

.. GENERATED FROM PYTHON SOURCE LINES 26-29

.. code-block:: Python

    frame_conversion = mr.EarthFixedFrame('itrf', 'j2000')









.. GENERATED FROM PYTHON SOURCE LINES 30-31

We can then plot the basis vectors at each of the selected times, labeling them in each subplot

.. GENERATED FROM PYTHON SOURCE LINES 31-70

.. code-block:: Python

    def plot_bases_at_date(pl: pv.Plotter, d: datetime.datetime) -> None:
        pl.add_text(d.strftime('%Y-%m-%d %H:%M:%S UTC'))
        mrv.plot_earth(
            pl,
            mode='eci',
            date=d,
            night_lights=True,
            atmosphere=True,
            lighting=True,
        )
        mrv.plot_basis(
            pl,
            frame_conversion.rotms_at_dates(d),
            color='r',
            labels=['$ITRF_x$', '$ITRF_y$', '$z$'],
            **label_kwargs,
        )

        mrv.plot_basis(
            pl,
            np.eye(3),
            color='g',
            labels=['$J2000_x$', '$J2000_y$', '$z$'],
            **label_kwargs,
        )


    label_kwargs = {
        'shape_opacity': 0.3,
        'font_size': 20,
        'scale': 10e3,
    }
    pl = pv.Plotter(shape=(ntimes // 2, ntimes // 2))
    for i, d in enumerate(dspace):
        pl.subplot(i // 2, i % 2)
        plot_bases_at_date(pl, d)
        pl.camera.position = (40e3, -40e3, 40e3)
    pl.show()




.. image-sg:: /gallery/03-coordinate-systems/images/sphx_glr_equinoxes_001.png
   :alt: equinoxes
   :srcset: /gallery/03-coordinate-systems/images/sphx_glr_equinoxes_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 71-73

It's easy to get confused about what the vernal equinox really *is*. Is it a time? Is it a direction?
To dig into this, let's look at the transformation between ITRF and J2000 at noon on the equinoxes and solstices

.. GENERATED FROM PYTHON SOURCE LINES 73-96

.. code-block:: Python


    vernal_equinox = datetime.datetime(2023, 3, 19, 12, 0, 0, tzinfo=datetime.timezone.utc)
    summer_solstice = datetime.datetime(2023, 6, 21, 12, 0, 0, tzinfo=datetime.timezone.utc)
    autumnal_solstice = datetime.datetime(
        2023, 9, 23, 12, 0, 0, tzinfo=datetime.timezone.utc
    )
    winter_solstice = datetime.datetime(
        2023, 12, 21, 12, 0, 0, tzinfo=datetime.timezone.utc
    )

    important_dates = [
        vernal_equinox,
        summer_solstice,
        autumnal_solstice,
        winter_solstice,
    ]

    pl = pv.Plotter(shape=(ntimes // 2, ntimes // 2))
    for i, d in enumerate(important_dates):
        pl.subplot(i // 2, i % 2)
        plot_bases_at_date(pl, d)
        pl.camera.position = (40e3, -40e3, 40e3)
    pl.show()



.. image-sg:: /gallery/03-coordinate-systems/images/sphx_glr_equinoxes_002.png
   :alt: equinoxes
   :srcset: /gallery/03-coordinate-systems/images/sphx_glr_equinoxes_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (8 minutes 48.932 seconds)


.. _sphx_glr_download_gallery_03-coordinate-systems_equinoxes.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: equinoxes.ipynb <equinoxes.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: equinoxes.py <equinoxes.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: equinoxes.zip <equinoxes.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

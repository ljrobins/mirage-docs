
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/07-observer/atmos_refraction.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_07-observer_atmos_refraction.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_07-observer_atmos_refraction.py:


Atmospheric Refraction
======================
Computing the effect of atmospheric refraction on observations

.. GENERATED FROM PYTHON SOURCE LINES 6-37



.. image-sg:: /gallery/07-observer/images/sphx_glr_atmos_refraction_001.png
   :alt: Atmospheric Refraction
   :srcset: /gallery/07-observer/images/sphx_glr_atmos_refraction_001.png, /gallery/07-observer/images/sphx_glr_atmos_refraction_001_2_00x.png 2.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    True elevation: 55.7 deg
    Apparent elevation: 55.71173209771628 deg
    Refraction: 42.23555177859453 arcsec






|

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    import mirage as mr
    import mirage.vis as mrv

    true_el = np.deg2rad(np.linspace(15.1, 90, int(1e3)))
    atmos_pressure = 1028.4463393  # mbar
    atmos_temp = 277.594  # Kelvin

    apparent_el = mr.apparent_refacted_elevation(atmos_pressure, atmos_temp, true_el)

    test_el_deg = 55.7
    test_el_rad = np.deg2rad(test_el_deg)
    app_el_deg = np.rad2deg(
        mr.apparent_refacted_elevation(atmos_pressure, atmos_temp, test_el_rad)
    )
    delta_el_deg = app_el_deg - test_el_deg
    delta_el_arcsec = delta_el_deg * 3600
    print(f'True elevation: {test_el_deg} deg')
    print(f'Apparent elevation: {app_el_deg} deg')
    print(f'Refraction: {delta_el_arcsec} arcsec')

    plt.plot(np.rad2deg(true_el), np.rad2deg(apparent_el - true_el))
    mrv.texit(
        'Atmospheric Refraction', 'True elevation $h$', "Refraction $R = h' - h$ [deg]"
    )
    plt.xlim(0, 90)
    plt.ylim(0, 0.53)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.145 seconds)


.. _sphx_glr_download_gallery_07-observer_atmos_refraction.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: atmos_refraction.ipynb <atmos_refraction.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: atmos_refraction.py <atmos_refraction.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: atmos_refraction.zip <atmos_refraction.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

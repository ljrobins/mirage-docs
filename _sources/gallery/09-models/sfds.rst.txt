
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/09-models/sfds.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_09-models_sfds.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_09-models_sfds.py:


Signed Distance Fields
======================

Plotting 2D and 3D Signed Distance Fields

.. GENERATED FROM PYTHON SOURCE LINES 7-26

.. code-block:: Python


    import matplotlib.pyplot as plt
    import mesdf
    import numpy as np
    import pyvista as pv

    import mirage as mr
    import mirage.vis as mrv

    obj = mr.SpaceObject('stanford_bunny.obj').clean()
    obj.v -= np.mean(obj.v, axis=0)

    f = mesdf.SDF(obj.v, obj.f)

    grid_width = 1.3 * np.max(mr.vecnorm(obj.v))
    grid_density = 150
    grid = mr.r3_grid(grid_width, grid_density)
    sdf_vals = -f(grid.points)








.. GENERATED FROM PYTHON SOURCE LINES 27-28

Plotting a 2D slide of the SDF

.. GENERATED FROM PYTHON SOURCE LINES 28-49

.. code-block:: Python


    sdf_slice = sdf_vals.reshape(grid.dimensions)[:, grid_density // 2 + 10, :]

    plt.figure()
    plt.contour(
        sdf_slice,
        levels=np.linspace(np.min(sdf_slice), np.max(sdf_slice), 10),
        colors='k',
        extent=[-grid_width, grid_width, -grid_width, grid_width],
    )
    plt.imshow(
        np.flipud(sdf_slice),
        extent=[-grid_width, grid_width, -grid_width, grid_width],
        cmap='RdBu',
    )
    mrv.texit('Signed Distance Field', 'x', 'y', grid=False)
    plt.colorbar(label='Signed Distance', cax=mrv.get_cbar_ax())
    plt.tight_layout()
    plt.show()





.. image-sg:: /gallery/09-models/images/sphx_glr_sfds_001.png
   :alt: Signed Distance Field
   :srcset: /gallery/09-models/images/sphx_glr_sfds_001.png, /gallery/09-models/images/sphx_glr_sfds_001_2_00x.png 2.00x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 50-51

Plotting the full 3D SDF

.. GENERATED FROM PYTHON SOURCE LINES 51-72

.. code-block:: Python


    pl = pv.Plotter(window_size=(1000, 1000))

    for cval in np.linspace(np.min(sdf_vals), -np.min(sdf_vals), 7):
        mesh1, mesh2 = grid.contour([cval], sdf_vals, method='flying_edges').clip(
            'y', origin=(0.0, 0.0, 0.0), return_clipped=True
        )
        if mesh1.points.shape[0] > 0:
            pl.add_mesh(
                mesh1,
                opacity=1.0,
                scalars=cval * np.ones(mesh1.n_points),
                cmap='coolwarm',
                scalar_bar_args=dict(title='SDF Value'),
                clim=[np.min(sdf_vals), -np.min(sdf_vals)],
                smooth_shading=True,
            )

    pl.camera.position = (0.0, 0.6, 0.0)
    pl.show()




.. image-sg:: /gallery/09-models/images/sphx_glr_sfds_002.png
   :alt: sfds
   :srcset: /gallery/09-models/images/sphx_glr_sfds_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 73-74

Animating an orbital path around the SDF

.. GENERATED FROM PYTHON SOURCE LINES 74-91

.. code-block:: Python


    pl = pv.Plotter()

    for cval in np.linspace(np.min(sdf_vals), -np.min(sdf_vals), 10):
        mesh = grid.contour([cval], sdf_vals, method='flying_edges')
        if mesh.points.shape[0] > 0:
            pl.add_mesh(
                mesh,
                opacity=0.1,
                scalars=cval * np.ones(mesh.n_points),
                cmap='coolwarm',
                scalar_bar_args=dict(title='SDF Value'),
            )

    pl.open_gif('sdf_orbit.gif')
    path = pl.generate_orbital_path(n_points=36, shift=mesh.length / 3)
    pl.orbit_on_path(path, write_frames=True)



.. image-sg:: /gallery/09-models/images/sphx_glr_sfds_003.gif
   :alt: sfds
   :srcset: /gallery/09-models/images/sphx_glr_sfds_003.gif
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.860 seconds)


.. _sphx_glr_download_gallery_09-models_sfds.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: sfds.ipynb <sfds.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: sfds.py <sfds.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: sfds.zip <sfds.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

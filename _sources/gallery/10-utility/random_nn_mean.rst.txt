
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/10-utility/random_nn_mean.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_10-utility_random_nn_mean.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_10-utility_random_nn_mean.py:


Closest Average Random Nearest Neighbor
=======================================

Using a method from :cite:`bhattacharyya2003` to find the mean distance to the kth nearest neighbor for uniformly scattered points in n-dimensions

.. GENERATED FROM PYTHON SOURCE LINES 7-61



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gallery/10-utility/images/sphx_glr_random_nn_mean_001.png
         :alt: random nn mean
         :srcset: /gallery/10-utility/images/sphx_glr_random_nn_mean_001.png, /gallery/10-utility/images/sphx_glr_random_nn_mean_001_2_00x.png 2.00x
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gallery/10-utility/images/sphx_glr_random_nn_mean_002.png
         :alt: random nn mean
         :srcset: /gallery/10-utility/images/sphx_glr_random_nn_mean_002.png, /gallery/10-utility/images/sphx_glr_random_nn_mean_002_2_00x.png 2.00x
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    expect: 0.009375
    got: 0.005081
    expect: 0.04
    got: 0.02601
    expect: 0.08552
    got: 0.0629
    expect: 0.1378
    got: 0.1098
    expect: 0.1921
    got: 0.1619
    expect: 0.2462
    got: 0.2173
    expect: 0.2988
    got: 0.2751
    expect: 0.3496
    got: 0.3316
    expect: 0.3984
    got: 0.3885
    expect: 0.4451
    got: 0.4434






|

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np
    from scipy.special import gamma
    from sklearn.neighbors import BallTree

    import mirage as mr


    def dist_to_nearest_neighbor(pts: np.ndarray) -> np.ndarray:
        nn_ind = BallTree(pts).query(pts, k=2)[1][:, 1]
        return mr.vecnorm(pts - pts[nn_ind, :])


    def uniform_pts_expected_distance_to_nn(
        d: np.ndarray, n: np.ndarray, k: np.ndarray
    ) -> np.ndarray:
        t1 = gamma(d / 2 + 1) ** (1 / d) / np.pi**0.5
        t2 = gamma(k + 1 / d) / gamma(k)
        t3 = (1 / n) ** (1 / d)
        rn = t1 * t2 * t3
        return rn


    ds = np.arange(2, 10)
    ns = np.geomspace(10**1, 10**6, 100)
    k = 1

    dd, nn = np.meshgrid(ds, ns)
    zs = np.log10(uniform_pts_expected_distance_to_nn(dd, nn, k))

    # plt.gca().set_aspect()
    levels = np.geomspace(zs.min(), zs.max(), 10)

    plt.contourf(ds, np.log10(ns), zs, levels=levels, cmap='plasma')
    plt.colorbar(label='Log distance to closest neighbor $\log_{10}(d)$')
    plt.xlabel('Number of Dimensions')
    plt.ylabel('Log number of sampled points')
    plt.show()

    plt.figure()

    npts = int(1e4)
    for ndim in range(2, 12):
        rn = uniform_pts_expected_distance_to_nn(ndim, npts, k=3)
        x = np.random.rand(npts, ndim)
        dn = dist_to_nearest_neighbor(x)
        plt.hist(dn, log=True, bins=100, alpha=0.5, density=True)
        plt.vlines(rn, 0, 2)
        print(f'expect: {rn:.4}')
        print(f'got: {np.mean(dn):.4}')

    # plt.xscale('log')
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.099 seconds)


.. _sphx_glr_download_gallery_10-utility_random_nn_mean.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: random_nn_mean.ipynb <random_nn_mean.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: random_nn_mean.py <random_nn_mean.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: random_nn_mean.zip <random_nn_mean.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/10-utility/metropolis_hastings.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_10-utility_metropolis_hastings.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_10-utility_metropolis_hastings.py:


Metropolis Hastings MCMC
========================

Markov Chain Monte Carlo approximation of an unknown probability density

.. GENERATED FROM PYTHON SOURCE LINES 7-47



.. image-sg:: /gallery/10-utility/images/sphx_glr_metropolis_hastings_001.png
   :alt: $p(x) = \frac{1}{3.545} e^{-x^2}\left(2 + \sin 5x + \sin 2x\right)$
   :srcset: /gallery/10-utility/images/sphx_glr_metropolis_hastings_001.png, /gallery/10-utility/images/sphx_glr_metropolis_hastings_001_2_00x.png 2.00x
   :class: sphx-glr-single-img





.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    px = lambda x: np.exp(-(x**2)) * (2 + np.sin(5 * x) + np.sin(2 * x))

    sigma = 1.0
    q = (
        lambda loc, x: 1
        / (np.sqrt(2 * np.pi * sigma**2))
        * np.exp(-1 / 2 * (x - loc) ** 2 / sigma**2)
    )
    q_sampler = lambda x: np.random.normal(loc=x, scale=sigma)

    xn = 0.0
    n_samples = 10000
    burn_in = 200

    xns = [xn]
    for i in range(n_samples):
        xsn = q_sampler(xn)
        acceptance_probability = min(1, px(xsn) / px(xn))
        if acceptance_probability > np.random.rand():  # if accepted
            xn = xsn
        else:
            pass
        if i >= burn_in:
            xns.append(xn)

    x = np.linspace(-3, 3, 1000)
    ps = np.trapz(px(x), x)
    plt.plot(x, px(x) / ps, label='True density')
    plt.hist(xns, bins=50, density=True, label=f'MCMC density, {n_samples} samples')
    plt.title(r'$p(x) = \frac{1}{3.545} e^{-x^2}\left(2 + \sin 5x + \sin 2x\right)$')
    plt.grid()
    plt.legend()
    plt.xlabel('$x$')
    plt.ylabel('$p(x)$')
    plt.tight_layout()
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.234 seconds)


.. _sphx_glr_download_gallery_10-utility_metropolis_hastings.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: metropolis_hastings.ipynb <metropolis_hastings.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: metropolis_hastings.py <metropolis_hastings.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: metropolis_hastings.zip <metropolis_hastings.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

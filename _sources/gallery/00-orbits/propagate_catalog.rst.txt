
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/00-orbits/propagate_catalog.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_00-orbits_propagate_catalog.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_00-orbits_propagate_catalog.py:


Propagating the catalog
=========================

Load the full TLE catalog and propagate all objects to a given epoch

.. GENERATED FROM PYTHON SOURCE LINES 7-9

.. code-block:: Python


    import datetime







.. GENERATED FROM PYTHON SOURCE LINES 10-11

First, let's define a function that plots the catalog at a given date

.. GENERATED FROM PYTHON SOURCE LINES 11-50

.. code-block:: Python

    from typing import Callable

    import numpy as np
    import pyvista as pv

    import mirage as mr
    import mirage.vis as mrv


    def plot_catalog_at_date(
        pl: pv.Plotter,
        date: datetime.datetime,
        color: str = 'k',
        scalars: Callable = None,
        cmap: str = 'viridis',
        point_size: int = 3,
    ) -> None:
        r_eci, _ = mr.propagate_catalog_to_dates(date)
        mrv.plot_earth(
            pl,
            date=date,
            atmosphere=True,
            night_lights=True,
        )
        mrv.scatter3(
            pl,
            r_eci,
            show_scalar_bar=False,
            point_size=point_size,
            lighting=False,
            color=color if scalars is None else None,
            scalars=scalars(r_eci) if scalars is not None else None,
            cmap=cmap,
        )
        pl.add_text(f'{date.day}/{date.month}/{date.year}', font='courier')
        pl.camera.focal_point = (0.0, 0.0, 0.0)
        pl.camera.position = 180e3 * np.array([0, 0.01, 1])









.. GENERATED FROM PYTHON SOURCE LINES 51-53

Space in 2023 compared with space in 2000
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 53-66

.. code-block:: Python


    pl = pv.Plotter(shape=(1, 2), window_size=(2000, 1000))
    pl.subplot(0, 1)
    plot_catalog_at_date(pl, mr.today())
    pl.disable_anti_aliasing()
    pl.subplot(0, 0)
    plot_catalog_at_date(pl, mr.today() - mr.years(23))
    pl.disable_anti_aliasing()
    pl.link_views()
    pl.background_color = 'white'
    pl.show()





.. image-sg:: /gallery/00-orbits/images/sphx_glr_propagate_catalog_001.png
   :alt: propagate catalog
   :srcset: /gallery/00-orbits/images/sphx_glr_propagate_catalog_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 67-69

Space in 1980
~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 69-91

.. code-block:: Python

    pl = pv.Plotter()
    plot_catalog_at_date(
        pl,
        mr.today(),
        scalars=lambda r: (mr.vecnorm(r) < 42100)
        + (mr.vecnorm(r) < 21_000)
        + (mr.vecnorm(r) < 42190),
        cmap='glasbey',
        point_size=10,
    )

    pl.open_gif('test.gif', fps=20)
    nframes = 150
    t = np.linspace(0, 2 * np.pi, nframes, endpoint=False)
    path_pts = np.array([np.sin(t), np.cos(t), np.zeros_like(t)]).T
    path_pts[:, 2] += 0.5
    path_pts = mr.hat(path_pts) * 18e4
    pl.camera.center = (0.0, 0.0, 0.0)
    for pt in path_pts:
        pl.camera.position = pt
        pl.write_frame()
    pl.close()



.. image-sg:: /gallery/00-orbits/images/sphx_glr_propagate_catalog_002.gif
   :alt: propagate catalog
   :srcset: /gallery/00-orbits/images/sphx_glr_propagate_catalog_002.gif
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 15.701 seconds)


.. _sphx_glr_download_gallery_00-orbits_propagate_catalog.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: propagate_catalog.ipynb <propagate_catalog.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: propagate_catalog.py <propagate_catalog.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: propagate_catalog.zip <propagate_catalog.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

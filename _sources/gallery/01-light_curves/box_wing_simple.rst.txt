
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/01-light_curves/box_wing_simple.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_01-light_curves_box_wing_simple.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_01-light_curves_box_wing_simple.py:


Simple Box-Wing Light Curves
============================

.. GENERATED FROM PYTHON SOURCE LINES 5-88



.. image-sg:: /gallery/01-light_curves/images/sphx_glr_box_wing_simple_001.png
   :alt: Integrated Irradiance from GOES 17 in [W / $m^2$]
   :srcset: /gallery/01-light_curves/images/sphx_glr_box_wing_simple_001.png, /gallery/01-light_curves/images/sphx_glr_box_wing_simple_001_2_00x.png 2.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-10-19 23:51:45.625 LightCurveEngine-mac-arm[7700:56708241] +[IMKClient subclass]: chose IMKClient_Legacy
    2024-10-19 23:51:45.625 LightCurveEngine-mac-arm[7700:56708241] +[IMKInputSession subclass]: chose IMKInputSession_Legacy

    /Users/liamrobinson/Documents/maintained-research/mirage/examples/01-light_curves/box_wing_simple.py:76: RuntimeWarning: invalid value encountered in scalar divide
      percent_err_at_peak = np.abs(lc_simp.max() - lc_fancy.max()) / lc_fancy.max() * 100
    nan 0.023249934054803106






|

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    import mirage as mr

    station = mr.Station()
    obj = mr.SpaceObject('matlib_goes17.obj', identifier='GOES 17')

    a_pan = 3.0 * 1.27  # m^2
    a_bus = 0.8 * 1.1  # m^2
    cd_pan = 0.5
    cs_pan = 0.5
    n_pan = 5
    cd_bus = 0.5
    cs_bus = 0.5
    n_bus = 5

    d0 = mr.utc(2024, 10, 18)
    dates, epsecs = mr.date_linspace(d0, d0 + mr.hours(14), 100, return_epsecs=True)

    r_obj = obj.propagate(dates)
    svi = mr.sun(dates) - r_obj  # from obj to sun
    ovi = station.j2000_at_dates(dates) - r_obj  # from obj to obs

    f = (
        mr.AstroConstants.sun_irradiance_vacuum
        / mr.vecnorm(ovi) ** 2
        / (mr.vecnorm(svi) / mr.AstroConstants.au_to_km) ** 2
    )
    f = f.flatten()

    attitude = mr.AlignedAndConstrainedAttitude(
        -mr.hat(r_obj), mr.hat(svi), dates, axis_order=(2, 0, 1)
    )

    q_of_t, w_of_t = attitude.propagate(epsecs)
    d_of_t = mr.quat_to_dcm(q_of_t)  # inertial to body

    svb = mr.stack_mat_mult_vec(d_of_t, svi)
    ovb = mr.stack_mat_mult_vec(d_of_t, ovi)

    s = mr.hat(svb)
    o = mr.hat(ovb)
    h = mr.hat(s + o)
    fr_pan = cd_pan / np.pi + cs_pan * (n_pan + 2) / (2 * np.pi) * mr.dot(s, h) ** n_pan / (
        4 * mr.dot(s, o)
    )
    fr_bus = cd_bus / np.pi + cs_bus * (n_bus + 2) / (2 * np.pi) * mr.dot(o, h) ** n_bus / (
        4 * mr.dot(s, o)
    )
    lc_simp = ((a_bus * fr_bus + a_pan * fr_pan) * mr.rdot(s, o)).flatten()

    brdf = mr.Brdf('blinn-phong', cd=0.5, cs=0.5, n=5)

    lc_fancy = mr.run_light_curve_engine(
        brdf,
        obj,
        mr.hat(svb),
        mr.hat(ovb),
        show_window=True,
        verbose=False,
        rotate_panels=True,
        frame_rate=1000,
        instances=1,
    )

    # lc_sampler, info = station.observe_light_curve(obj, attitude, brdf, dates, integration_time_s=10, use_engine=True, rotate_panels=True)
    # lc = lc_sampler().flatten()
    # lc_fancy = info['lc_clean_norm'].flatten()

    percent_err_at_peak = np.abs(lc_simp.max() - lc_fancy.max()) / lc_fancy.max() * 100
    median_err = np.median(np.abs(lc_simp - lc_fancy))
    print(percent_err_at_peak, median_err)

    plt.plot(epsecs / 3600, lc_fancy * f, 'k', linewidth=2.5, label='Full Rendered')
    plt.plot(epsecs / 3600, lc_simp * f, 'c--', linewidth=2, label='Simplified')
    plt.grid()
    plt.legend()
    plt.title('Integrated Irradiance from GOES 17 in [W / $m^2$]')
    plt.xlabel('Hours after 00:00 Oct 18, 2024 UTC')
    plt.ylabel('Integrated Light Curve')
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.907 seconds)


.. _sphx_glr_download_gallery_01-light_curves_box_wing_simple.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: box_wing_simple.ipynb <box_wing_simple.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: box_wing_simple.py <box_wing_simple.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: box_wing_simple.zip <box_wing_simple.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/02-light_curve_inversion/egi_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_02-light_curve_inversion_egi_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_02-light_curve_inversion_egi_optimization.py:


EGI Optimization
================
EGI optimization figures recreated in Python, originally published in :cite:p:robinson2022:.

.. GENERATED FROM PYTHON SOURCE LINES 6-14

.. code-block:: Python


    import numpy as np
    import pyvista as pv
    import scipy.optimize as opt

    import mirage as mr
    import mirage.vis as mrv








.. GENERATED FROM PYTHON SOURCE LINES 15-16

Plotting the EGI of a cube

.. GENERATED FROM PYTHON SOURCE LINES 16-26

.. code-block:: Python

    obj = mr.SpaceObject('cube.obj')
    obj.shift_to_center_of_mass()
    cpos = [7, 7, 5]

    pl = pv.Plotter()
    mrv.render_spaceobject(pl, obj, opacity=1, color='linen')
    mrv.plot_egi(pl, obj, obj.egi, scale_opacity=False)
    pl.camera.position = cpos
    pl.show()




.. image-sg:: /gallery/02-light_curve_inversion/images/sphx_glr_egi_optimization_001.png
   :alt: egi optimization
   :srcset: /gallery/02-light_curve_inversion/images/sphx_glr_egi_optimization_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 27-28

Plotting the initial optimized EGI

.. GENERATED FROM PYTHON SOURCE LINES 28-45

.. code-block:: Python

    n = 500
    brdf = mr.Brdf('phong', cd=0.5, cs=0.5, n=10)
    normal_candidates = mr.fibonacci_sample_sphere(n)
    svb = mr.rand_unit_vectors(n)
    ovb = mr.rand_unit_vectors(n)
    g_candidates = brdf.compute_reflection_matrix(svb, ovb, normal_candidates)
    lc = obj.convex_light_curve(brdf, svb, ovb)
    a_candidates = opt.nnls(g_candidates, lc)[0]
    valid = a_candidates > np.sum(a_candidates) / 100
    egi_candidate = normal_candidates[valid, :] * a_candidates[valid].reshape(-1, 1)

    pl = pv.Plotter()
    mrv.render_spaceobject(pl, obj, opacity=0.5, color='linen')
    mrv.plot_egi(pl, obj, egi_candidate, scale_opacity=True)
    pl.camera.position = cpos
    pl.show()




.. image-sg:: /gallery/02-light_curve_inversion/images/sphx_glr_egi_optimization_002.png
   :alt: egi optimization
   :srcset: /gallery/02-light_curve_inversion/images/sphx_glr_egi_optimization_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 46-47

Plotting the resampled EGI

.. GENERATED FROM PYTHON SOURCE LINES 47-69

.. code-block:: Python


    resampled_n_candidates = []
    nc = 100
    for n_cand in mr.hat(egi_candidate):
        resampled_n_candidates.append(mr.rand_cone_vectors(n_cand, np.pi / 20, nc))
    resampled_n_candidates = np.vstack(resampled_n_candidates)

    g_candidates = brdf.compute_reflection_matrix(svb, ovb, resampled_n_candidates)
    lc = obj.convex_light_curve(brdf, svb, ovb)
    a_candidates = opt.nnls(g_candidates, lc)[0]
    valid = a_candidates > np.sum(a_candidates) / 100
    egi_candidate_resampled = resampled_n_candidates[valid, :] * a_candidates[
        valid
    ].reshape(-1, 1)

    pl = pv.Plotter()
    mrv.render_spaceobject(pl, obj, color='linen', opacity=0.5)
    mrv.scatter3(pl, 1.2 * resampled_n_candidates, color='r', point_size=3, opacity=0.5)
    mrv.plot_egi(pl, obj, egi_candidate_resampled, scale_opacity=True)
    pl.camera.position = cpos
    pl.show()




.. image-sg:: /gallery/02-light_curve_inversion/images/sphx_glr_egi_optimization_003.png
   :alt: egi optimization
   :srcset: /gallery/02-light_curve_inversion/images/sphx_glr_egi_optimization_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 70-71

Plotting merged EGI

.. GENERATED FROM PYTHON SOURCE LINES 71-80

.. code-block:: Python


    egi_merged = mr.merge_clusters(egi_candidate_resampled, np.pi / 10)

    pl = pv.Plotter()
    mrv.render_spaceobject(pl, obj, color='linen', opacity=0.5)
    mrv.plot_egi(pl, obj, egi_merged)
    pl.camera.position = cpos
    pl.show()




.. image-sg:: /gallery/02-light_curve_inversion/images/sphx_glr_egi_optimization_004.png
   :alt: egi optimization
   :srcset: /gallery/02-light_curve_inversion/images/sphx_glr_egi_optimization_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 81-82

Plotting the reconstructed object

.. GENERATED FROM PYTHON SOURCE LINES 82-103

.. code-block:: Python

    egi_merged -= np.sum(egi_merged, axis=0) / egi_merged.shape[0]
    mr.tic()
    # obj_reconstructed = mr.construct_mesh_from_egi(egi_merged)
    h = mr.optimize_supports_little(egi_merged)
    dt = mr.toc(return_elapsed_seconds=True)
    obj_reconstructed = mr.construct_from_egi_and_supports(egi_merged, h)
    obj_reconstructed.shift_to_center_of_mass()

    pl = pv.Plotter(shape=(1, 2), window_size=(1000, 500))
    pl.subplot(0, 0)
    mrv.render_spaceobject(pl, obj, opacity=1, color='linen')
    pl.add_text('Original', font='courier', position='upper_left')
    pl.subplot(0, 1)
    mrv.render_spaceobject(pl, obj_reconstructed, opacity=1, color='linen')
    pl.add_text('Reconstructed', font='courier', position='upper_left')
    pl.link_views()
    pl.camera.position = cpos
    pl.camera.zoom(1.4)
    pl.show()





.. image-sg:: /gallery/02-light_curve_inversion/images/sphx_glr_egi_optimization_005.png
   :alt: egi optimization
   :srcset: /gallery/02-light_curve_inversion/images/sphx_glr_egi_optimization_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    | niter |f evals|CG iter|  obj func   |tr radius |   opt    |  c viol  | penalty  |barrier param|CG stop|
    |-------|-------|-------|-------------|----------|----------|----------|----------|-------------|-------|
    |   1   |   1   |   0   | +1.0000e+00 | 1.00e+00 | 3.78e-02 | 9.99e-01 | 1.00e+00 |  1.00e-01   |   0   |
    /Users/liamrobinson/Documents/mirage/lib/python3.11/site-packages/scipy/optimize/_differentiable_functions.py:316: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
      self.H.update(self.x - self.x_prev, self.g - self.g_prev)
    |   2   |   2   |   1   | +6.4451e+00 | 5.63e+00 | 1.39e-01 | 8.37e-01 | 8.61e+00 |  1.00e-01   |   4   |
    |   3   |   3   |   3   | +6.4451e+00 | 5.63e-01 | 1.39e-01 | 8.37e-01 | 8.61e+00 |  1.00e-01   |   4   |
    |   4   |   4   |   4   | +1.0281e+01 | 3.16e+00 | 1.45e-02 | 3.32e-01 | 1.33e+02 |  1.00e-01   |   4   |
    |   5   |   5   |   5   | +1.1982e+01 | 4.91e+00 | 2.73e-03 | 5.79e-02 | 1.33e+02 |  1.00e-01   |   4   |
    |   6   |   5   |   5   | +1.1982e+01 | 2.46e+01 | 2.12e-03 | 5.79e-02 | 1.00e+00 |  2.00e-02   |   0   |
    |   7   |   6   |   6   | +1.1764e+01 | 2.46e+01 | 2.67e-03 | 1.05e-03 | 1.00e+00 |  2.00e-02   |   4   |

    `gtol` termination condition is satisfied.
    Number of iterations: 7, function evaluations: 6, CG iterations: 6, optimality: 2.67e-03, constraint violation: 1.05e-03, execution time: 0.042 s.




.. GENERATED FROM PYTHON SOURCE LINES 104-105

Reconstructing with the non-sparse EGI

.. GENERATED FROM PYTHON SOURCE LINES 105-171

.. code-block:: Python


    pl = pv.Plotter(shape=(1, 4), window_size=(2000, 500))
    pl.subplot(0, 0)
    mrv.render_spaceobject(pl, obj, opacity=1, color='linen')
    pl.add_text('Truth', font='courier', position='upper_left')

    egi_candidate = mr.close_egi(egi_candidate)
    egi_candidate_resampled = mr.close_egi(egi_candidate_resampled)

    pl.subplot(0, 1)
    mr.tic()
    # obj_reconstructed_initial = mr.construct_mesh_from_egi(egi_candidate)
    h_initial = mr.optimize_supports_little(egi_candidate)
    dt_initial = mr.toc(return_elapsed_seconds=True)
    obj_reconstructed_initial = mr.construct_from_egi_and_supports(egi_candidate, h_initial)
    obj_reconstructed_initial.shift_to_center_of_mass()
    mrv.render_spaceobject(
        pl,
        obj_reconstructed_initial,
        opacity=0.7,
        color='linen',
        feature_edges=True,
        feature_edge_color='k',
        feature_edge_angle=2,
    )
    mrv.render_spaceobject(pl, obj, style='wireframe', feature_edges=True)
    pl.add_text(f'Initial EGI: {dt_initial:.2f}s', font='courier', position='upper_left')

    pl.subplot(0, 2)
    mr.tic()
    h_resampled = mr.optimize_supports_little(egi_candidate_resampled)
    # obj_reconstructed_resampled = mr.construct_mesh_from_egi(egi_candidate_resampled)
    dt_resampled = mr.toc(return_elapsed_seconds=True)
    obj_reconstructed_resampled = mr.construct_from_egi_and_supports(
        egi_candidate_resampled, h_resampled
    )
    obj_reconstructed_resampled.shift_to_center_of_mass()
    mrv.render_spaceobject(
        pl,
        obj_reconstructed_resampled,
        opacity=0.7,
        color='linen',
        feature_edges=True,
        feature_edge_color='k',
        feature_edge_angle=2,
    )
    mrv.render_spaceobject(pl, obj, style='wireframe', feature_edges=True)
    pl.add_text(
        f'Resampled EGI: {dt_resampled:.2f}s', font='courier', position='upper_left'
    )


    pl.subplot(0, 3)
    mrv.render_spaceobject(
        pl,
        obj_reconstructed,
        opacity=0.7,
        color='linen',
        feature_edges=True,
        feature_edge_color='k',
        feature_edge_angle=2,
    )
    mrv.render_spaceobject(pl, obj, style='wireframe', color='k', feature_edges=True)
    pl.add_text(f'Merged EGI: {dt:.2f}s', font='courier', position='upper_left')

    pl.show()



.. image-sg:: /gallery/02-light_curve_inversion/images/sphx_glr_egi_optimization_006.png
   :alt: egi optimization
   :srcset: /gallery/02-light_curve_inversion/images/sphx_glr_egi_optimization_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    | niter |f evals|CG iter|  obj func   |tr radius |   opt    |  c viol  | penalty  |barrier param|CG stop|
    |-------|-------|-------|-------------|----------|----------|----------|----------|-------------|-------|
    |   1   |   1   |   0   | +1.0000e+00 | 1.00e+00 | 6.06e-01 | 1.00e+00 | 1.00e+00 |  1.00e-01   |   0   |
    /Users/liamrobinson/Documents/mirage/lib/python3.11/site-packages/scipy/optimize/_differentiable_functions.py:316: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
      self.H.update(self.x - self.x_prev, self.g - self.g_prev)
    |   2   |   2   |   1   | +2.6868e+00 | 7.00e+00 | 8.14e-01 | 1.00e+00 | 3.33e+00 |  1.00e-01   |   2   |
    |   3   |   3   |   5   | +3.0002e+01 | 4.37e+01 | 1.85e+00 | 2.48e+00 | 1.49e+02 |  1.00e-01   |   4   |
    |   4   |   4   |  10   | +2.6080e+01 | 4.37e+01 | 1.79e+00 | 5.38e-01 | 1.49e+02 |  1.00e-01   |   4   |
    |   5   |   5   |  15   | +2.3874e+01 | 4.37e+01 | 1.77e+00 | 5.70e-02 | 1.49e+02 |  1.00e-01   |   4   |
    |   6   |   6   |  20   | +2.2577e+01 | 4.37e+01 | 1.75e+00 | 1.11e-02 | 1.49e+02 |  1.00e-01   |   4   |
    |   7   |   8   |  27   | +2.2577e+01 | 4.37e+00 | 1.75e+00 | 1.11e-02 | 1.49e+02 |  1.00e-01   |   4   |
    |   8   |  10   |  34   | +2.2577e+01 | 4.37e-01 | 1.75e+00 | 1.11e-02 | 1.49e+02 |  1.00e-01   |   4   |
    |   9   |  11   |  35   | +2.0931e+01 | 3.06e+00 | 1.67e+00 | 4.32e-03 | 1.49e+02 |  1.00e-01   |   2   |
    |  10   |  13   |  42   | +2.0931e+01 | 3.06e-01 | 1.67e+00 | 4.32e-03 | 1.49e+02 |  1.00e-01   |   4   |
    |  11   |  14   |  43   | +1.9831e+01 | 2.14e+00 | 1.60e+00 | 1.74e-03 | 1.49e+02 |  1.00e-01   |   2   |
    |  12   |  16   |  46   | +1.9831e+01 | 2.14e-01 | 1.60e+00 | 1.74e-03 | 1.49e+02 |  1.00e-01   |   2   |
    |  13   |  17   |  47   | +1.9087e+01 | 1.50e+00 | 1.54e+00 | 4.74e-04 | 1.49e+02 |  1.00e-01   |   2   |
    |  14   |  19   |  49   | +1.9087e+01 | 1.50e-01 | 1.54e+00 | 4.74e-04 | 1.49e+02 |  1.00e-01   |   2   |
    |  15   |  20   |  50   | +1.8579e+01 | 1.05e+00 | 1.50e+00 | 3.71e-04 | 1.49e+02 |  1.00e-01   |   2   |
    |  16   |  22   |  51   | +1.8579e+01 | 1.05e-01 | 1.50e+00 | 3.71e-04 | 1.49e+02 |  1.00e-01   |   2   |
    |  17   |  23   |  52   | +1.8231e+01 | 2.10e-01 | 1.47e+00 | 5.97e-04 | 1.49e+02 |  1.00e-01   |   2   |
    |  18   |  24   |  53   | +1.7549e+01 | 2.10e-01 | 1.40e+00 | 4.24e-03 | 1.49e+02 |  1.00e-01   |   2   |
    |  19   |  25   |  54   | +1.6914e+01 | 4.20e-01 | 1.32e+00 | 4.81e-03 | 1.49e+02 |  1.00e-01   |   2   |
    |  20   |  26   |  55   | +1.5710e+01 | 4.20e-01 | 1.14e+00 | 1.16e-02 | 1.49e+02 |  1.00e-01   |   2   |
    |  21   |  28   |  56   | +1.4706e+01 | 2.94e+00 | 9.46e-01 | 9.46e-04 | 1.49e+02 |  1.00e-01   |   2   |
    |  22   |  30   |  62   | +1.4706e+01 | 2.94e-01 | 9.46e-01 | 9.46e-04 | 1.49e+02 |  1.00e-01   |   4   |
    |  23   |  32   |  63   | +1.4706e+01 | 3.14e-02 | 9.46e-01 | 9.46e-04 | 1.49e+02 |  1.00e-01   |   2   |
    |  24   |  33   |  64   | +1.4638e+01 | 2.20e-01 | 9.31e-01 | 2.06e-05 | 1.49e+02 |  1.00e-01   |   2   |
    |  25   |  35   |  65   | +1.4638e+01 | 2.20e-02 | 9.31e-01 | 2.06e-05 | 1.49e+02 |  1.00e-01   |   2   |
    |  26   |  36   |  66   | +1.4589e+01 | 4.40e-02 | 9.20e-01 | 7.27e-05 | 1.49e+02 |  1.00e-01   |   2   |
    |  27   |  38   |  67   | +1.4495e+01 | 3.08e-01 | 8.98e-01 | 1.59e-05 | 1.49e+02 |  1.00e-01   |   2   |
    |  28   |  40   |  68   | +1.4495e+01 | 3.08e-02 | 8.98e-01 | 1.59e-05 | 1.49e+02 |  1.00e-01   |   2   |
    |  29   |  42   |  69   | +1.4433e+01 | 2.16e-01 | 8.82e-01 | 6.25e-06 | 1.49e+02 |  1.00e-01   |   2   |
    |  30   |  44   |  70   | +1.4433e+01 | 2.16e-02 | 8.82e-01 | 6.25e-06 | 1.49e+02 |  1.00e-01   |   2   |
    |  31   |  45   |  71   | +1.4390e+01 | 2.16e-02 | 8.70e-01 | 2.20e-04 | 1.49e+02 |  1.00e-01   |   2   |
    |  32   |  46   |  72   | +1.4350e+01 | 4.31e-02 | 8.57e-01 | 1.98e-04 | 1.49e+02 |  1.00e-01   |   2   |
    |  33   |  47   |  73   | +1.4271e+01 | 4.31e-02 | 8.32e-01 | 6.76e-04 | 1.49e+02 |  1.00e-01   |   2   |
    |  34   |  48   |  74   | +1.4199e+01 | 8.62e-02 | 8.06e-01 | 3.54e-04 | 1.49e+02 |  1.00e-01   |   2   |
    |  35   |  49   |  75   | +1.4055e+01 | 1.72e-01 | 7.51e-01 | 7.25e-04 | 1.49e+02 |  1.00e-01   |   2   |
    |  36   |  50   |  76   | +1.3781e+01 | 3.45e-01 | 6.40e-01 | 1.10e-03 | 1.49e+02 |  1.00e-01   |   2   |
    |  37   |  52   |  77   | +1.3781e+01 | 5.42e-02 | 6.40e-01 | 1.10e-03 | 1.49e+02 |  1.00e-01   |   2   |
    |  38   |  53   |  78   | +1.3703e+01 | 3.79e-01 | 6.07e-01 | 3.33e-05 | 1.49e+02 |  1.00e-01   |   2   |
    |  39   |  55   |  82   | +1.3703e+01 | 3.79e-02 | 6.07e-01 | 3.33e-05 | 1.49e+02 |  1.00e-01   |   4   |
    |  40   |  56   |  83   | +1.3648e+01 | 2.65e-01 | 5.85e-01 | 9.56e-06 | 1.49e+02 |  1.00e-01   |   2   |
    |  41   |  58   |  85   | +1.3648e+01 | 2.65e-02 | 5.85e-01 | 9.56e-06 | 1.49e+02 |  1.00e-01   |   2   |
    |  42   |  59   |  86   | +1.3609e+01 | 1.86e-01 | 5.69e-01 | 3.98e-06 | 1.49e+02 |  1.00e-01   |   2   |
    |  43   |  61   |  87   | +1.3377e+01 | 3.72e-01 | 1.59e-01 | 1.10e-03 | 1.49e+02 |  1.00e-01   |   2   |
    |  44   |  63   |  91   | +1.3297e+01 | 1.32e+00 | 1.60e-01 | 1.01e-04 | 1.49e+02 |  1.00e-01   |   4   |
    |  45   |  65   |  95   | +1.3215e+01 | 1.65e+00 | 1.23e-01 | 5.51e-05 | 1.49e+02 |  1.00e-01   |   4   |
    |  46   |  67   |  100  | +1.3215e+01 | 1.65e-01 | 1.23e-01 | 5.51e-05 | 1.49e+02 |  1.00e-01   |   4   |
    |  47   |  69   |  102  | +1.3165e+01 | 3.30e-01 | 7.97e-02 | 2.37e-04 | 1.49e+02 |  1.00e-01   |   2   |
    |  48   |  71   |  109  | +1.3165e+01 | 3.30e-02 | 7.97e-02 | 2.37e-04 | 1.49e+02 |  1.00e-01   |   4   |
    |  49   |  73   |  110  | +1.3156e+01 | 2.31e-01 | 6.43e-02 | 3.84e-06 | 1.49e+02 |  1.00e-01   |   2   |
    |  50   |  73   |  110  | +1.3156e+01 | 1.16e+00 | 1.03e-01 | 3.84e-06 | 1.00e+00 |  2.00e-02   |   0   |
    |  51   |  74   |  117  | +1.3053e+01 | 2.47e+00 | 1.27e-01 | 1.15e-02 | 1.00e+00 |  2.00e-02   |   4   |
    |  52   |  75   |  120  | +1.3078e+01 | 2.47e+00 | 8.91e-02 | 2.02e-03 | 4.52e+00 |  2.00e-02   |   4   |
    |  53   |  76   |  125  | +1.3057e+01 | 2.47e+00 | 8.94e-02 | 5.95e-04 | 4.52e+00 |  2.00e-02   |   4   |
    |  54   |  78   |  131  | +1.3057e+01 | 2.47e-01 | 8.94e-02 | 5.95e-04 | 4.52e+00 |  2.00e-02   |   4   |
    |  55   |  79   |  133  | +1.3045e+01 | 3.43e-01 | 6.01e-02 | 1.53e-03 | 4.52e+00 |  2.00e-02   |   4   |
    |  56   |  80   |  136  | +1.3042e+01 | 3.43e-01 | 5.43e-02 | 1.31e-03 | 4.52e+00 |  2.00e-02   |   4   |
    |  57   |  81   |  139  | +1.3040e+01 | 3.43e-01 | 3.15e-02 | 8.40e-04 | 4.52e+00 |  2.00e-02   |   4   |
    |  58   |  82   |  141  | +1.3042e+01 | 3.43e-01 | 9.50e-03 | 2.42e-04 | 4.61e+00 |  2.00e-02   |   4   |

    `gtol` termination condition is satisfied.
    Number of iterations: 58, function evaluations: 82, CG iterations: 141, optimality: 9.50e-03, constraint violation: 2.42e-04, execution time:  2.0 s.
    | niter |f evals|CG iter|  obj func   |tr radius |   opt    |  c viol  | penalty  |barrier param|CG stop|
    |-------|-------|-------|-------------|----------|----------|----------|----------|-------------|-------|
    |   1   |   1   |   0   | +1.0000e+00 | 1.00e+00 | 1.30e+00 | 9.99e-01 | 1.00e+00 |  1.00e-01   |   0   |
    |   2   |   2   |   1   | +1.9776e+00 | 7.00e+00 | 1.01e+00 | 9.93e-01 | 2.48e+00 |  1.00e-01   |   2   |
    |   3   |   3   |   4   | +1.9297e+01 | 4.25e+01 | 1.55e+00 | 9.73e-01 | 3.92e+03 |  1.00e-01   |   4   |
    |   4   |   4   |  15   | +2.3731e+01 | 7.03e+01 | 1.52e+00 | 7.42e-01 | 3.92e+03 |  1.00e-01   |   4   |
    |   5   |   5   |  27   | +2.3731e+01 | 7.10e+00 | 1.52e+00 | 7.42e-01 | 3.92e+03 |  1.00e-01   |   4   |
    |   6   |   6   |  40   | +2.3731e+01 | 3.54e+00 | 1.52e+00 | 7.42e-01 | 3.92e+03 |  1.00e-01   |   4   |
    |   7   |   7   |  51   | +2.3731e+01 | 1.77e+00 | 1.52e+00 | 7.42e-01 | 3.92e+03 |  1.00e-01   |   2   |
    |   8   |   8   |  59   | +2.2672e+01 | 1.24e+01 | 1.50e+00 | 1.15e-01 | 3.92e+03 |  1.00e-01   |   2   |
    |   9   |   9   |  72   | +2.2672e+01 | 1.24e+00 | 1.50e+00 | 1.15e-01 | 3.92e+03 |  1.00e-01   |   4   |
    |  10   |  10   |  81   | +2.2672e+01 | 3.42e-01 | 1.50e+00 | 1.15e-01 | 3.92e+03 |  1.00e-01   |   2   |
    |  11   |  11   |  83   | +2.2875e+01 | 2.40e+00 | 1.49e+00 | 2.75e-02 | 3.92e+03 |  1.00e-01   |   2   |
    |  12   |  13   |  90   | +2.2875e+01 | 2.52e-01 | 1.49e+00 | 2.75e-02 | 3.92e+03 |  1.00e-01   |   2   |
    |  13   |  14   |  94   | +2.2875e+01 | 2.60e-02 | 1.49e+00 | 2.75e-02 | 3.92e+03 |  1.00e-01   |   2   |
    |  14   |  15   |  95   | +2.2820e+01 | 1.82e-01 | 1.49e+00 | 2.42e-02 | 3.92e+03 |  1.00e-01   |   2   |
    |  15   |  16   |  98   | +2.2599e+01 | 1.28e+00 | 1.48e+00 | 2.26e-03 | 3.92e+03 |  1.00e-01   |   2   |
    |  16   |  18   |  101  | +2.2599e+01 | 1.28e-01 | 1.48e+00 | 2.26e-03 | 3.92e+03 |  1.00e-01   |   2   |
    |  17   |  20   |  102  | +2.2599e+01 | 1.28e-02 | 1.48e+00 | 2.26e-03 | 3.92e+03 |  1.00e-01   |   2   |
    |  18   |  21   |  103  | +2.2599e+01 | 1.28e-03 | 1.48e+00 | 2.26e-03 | 3.92e+03 |  1.00e-01   |   2   |
    |  19   |  22   |  104  | +2.2596e+01 | 8.93e-03 | 1.48e+00 | 1.98e-03 | 3.92e+03 |  1.00e-01   |   2   |
    |  20   |  23   |  105  | +2.2596e+01 | 8.93e-04 | 1.48e+00 | 1.98e-03 | 3.92e+03 |  1.00e-01   |   2   |
    |  21   |  24   |  106  | +2.2594e+01 | 6.25e-03 | 1.48e+00 | 1.78e-03 | 3.92e+03 |  1.00e-01   |   2   |
    |  22   |  25   |  107  | +2.2581e+01 | 4.38e-02 | 1.48e+00 | 1.35e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  23   |  27   |  108  | +2.2581e+01 | 4.38e-03 | 1.48e+00 | 1.35e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  24   |  28   |  109  | +2.2581e+01 | 4.38e-04 | 1.48e+00 | 1.35e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  25   |  29   |  110  | +2.2581e+01 | 4.38e-05 | 1.48e+00 | 1.35e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  26   |  30   |  111  | +2.2581e+01 | 3.06e-04 | 1.48e+00 | 1.86e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  27   |  31   |  112  | +2.2580e+01 | 2.14e-03 | 1.48e+00 | 1.51e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  28   |  32   |  113  | +2.2580e+01 | 2.14e-04 | 1.48e+00 | 1.51e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  29   |  33   |  114  | +2.2580e+01 | 2.14e-05 | 1.48e+00 | 1.51e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  30   |  34   |  115  | +2.2580e+01 | 1.50e-04 | 1.48e+00 | 1.66e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  31   |  35   |  116  | +2.2580e+01 | 1.50e-05 | 1.48e+00 | 1.66e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  32   |  36   |  117  | +2.2580e+01 | 1.05e-04 | 1.48e+00 | 1.72e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  33   |  37   |  118  | +2.2580e+01 | 1.05e-05 | 1.48e+00 | 1.72e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  34   |  38   |  119  | +2.2580e+01 | 1.05e-06 | 1.48e+00 | 1.72e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  35   |  39   |  120  | +2.2580e+01 | 7.35e-06 | 1.48e+00 | 1.72e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  36   |  40   |  121  | +2.2580e+01 | 7.35e-07 | 1.48e+00 | 1.72e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  37   |  41   |  122  | +2.2580e+01 | 5.15e-06 | 1.48e+00 | 1.72e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  38   |  42   |  123  | +2.2580e+01 | 3.60e-05 | 1.48e+00 | 1.73e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  39   |  43   |  124  | +2.2580e+01 | 3.60e-06 | 1.48e+00 | 1.73e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  40   |  44   |  125  | +2.2580e+01 | 3.60e-07 | 1.48e+00 | 1.73e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  41   |  45   |  126  | +2.2580e+01 | 3.60e-08 | 1.48e+00 | 1.73e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  42   |  46   |  127  | +2.2580e+01 | 2.52e-07 | 1.48e+00 | 1.73e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  43   |  47   |  128  | +2.2580e+01 | 2.52e-08 | 1.48e+00 | 1.73e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  44   |  48   |  129  | +2.2580e+01 | 1.77e-07 | 1.48e+00 | 1.73e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  45   |  49   |  130  | +2.2580e+01 | 1.77e-08 | 1.48e+00 | 1.73e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  46   |  50   |  131  | +2.2580e+01 | 1.77e-09 | 1.48e+00 | 1.73e-04 | 3.92e+03 |  1.00e-01   |   2   |
    |  47   |  51   |  131  | +2.2580e+01 | 1.00e+00 | 1.51e+00 | 1.73e-04 | 1.00e+00 |  2.00e-02   |   0   |
    |  48   |  52   |  132  | +1.8267e+01 | 7.00e+00 | 1.38e+00 | 8.25e-01 | 1.00e+00 |  2.00e-02   |   2   |
    |  49   |  53   |  142  | +1.8267e+01 | 7.00e-01 | 1.38e+00 | 8.25e-01 | 1.00e+00 |  2.00e-02   |   2   |
    |  50   |  54   |  144  | +1.9396e+01 | 4.90e+00 | 1.42e+00 | 3.30e-01 | 5.56e+01 |  2.00e-02   |   2   |
    |  51   |  55   |  154  | +1.9396e+01 | 2.35e+00 | 1.42e+00 | 3.30e-01 | 5.56e+01 |  2.00e-02   |   4   |
    |  52   |  56   |  163  | +1.9396e+01 | 1.18e+00 | 1.42e+00 | 3.30e-01 | 5.56e+01 |  2.00e-02   |   2   |
    |  53   |  57   |  168  | +1.9396e+01 | 5.89e-01 | 1.42e+00 | 3.30e-01 | 5.56e+01 |  2.00e-02   |   2   |
    |  54   |  58   |  171  | +1.9762e+01 | 1.18e+00 | 1.41e+00 | 3.28e-01 | 5.56e+01 |  2.00e-02   |   2   |
    |  55   |  59   |  172  | +1.9762e+01 | 5.75e-01 | 1.41e+00 | 3.28e-01 | 5.56e+01 |  2.00e-02   |   2   |
    |  56   |  60   |  176  | +1.8960e+01 | 5.75e-01 | 1.40e+00 | 3.67e-01 | 5.56e+01 |  2.00e-02   |   2   |
    |  57   |  61   |  179  | +1.9156e+01 | 4.02e+00 | 1.37e+00 | 5.70e-02 | 5.56e+01 |  2.00e-02   |   2   |
    |  58   |  62   |  189  | +1.9156e+01 | 1.11e+00 | 1.37e+00 | 5.70e-02 | 5.56e+01 |  2.00e-02   |   4   |
    |  59   |  63   |  195  | +1.9156e+01 | 5.04e-01 | 1.37e+00 | 5.70e-02 | 5.56e+01 |  2.00e-02   |   2   |
    |  60   |  64   |  199  | +1.9156e+01 | 2.52e-01 | 1.37e+00 | 5.70e-02 | 5.56e+01 |  2.00e-02   |   2   |
    |  61   |  65   |  202  | +1.8854e+01 | 2.52e-01 | 1.38e+00 | 1.40e-01 | 5.56e+01 |  2.00e-02   |   2   |
    |  62   |  66   |  205  | +1.8589e+01 | 5.04e-01 | 1.36e+00 | 4.72e-02 | 5.56e+01 |  2.00e-02   |   2   |
    |  63   |  67   |  209  | +1.8589e+01 | 2.52e-01 | 1.36e+00 | 4.72e-02 | 5.56e+01 |  2.00e-02   |   2   |
    |  64   |  68   |  212  | +1.8589e+01 | 1.26e-01 | 1.36e+00 | 4.72e-02 | 5.56e+01 |  2.00e-02   |   2   |
    |  65   |  69   |  214  | +1.8423e+01 | 1.26e-01 | 1.35e+00 | 6.58e-02 | 5.56e+01 |  2.00e-02   |   2   |
    |  66   |  70   |  216  | +1.8262e+01 | 2.52e-01 | 1.35e+00 | 2.31e-02 | 5.56e+01 |  2.00e-02   |   2   |
    |  67   |  71   |  218  | +1.8262e+01 | 1.26e-01 | 1.35e+00 | 2.31e-02 | 5.56e+01 |  2.00e-02   |   2   |
    |  68   |  72   |  219  | +1.7907e+01 | 2.52e-01 | 1.32e+00 | 1.72e-02 | 5.56e+01 |  2.00e-02   |   2   |
    |  69   |  74   |  220  | +1.7907e+01 | 7.54e-02 | 1.32e+00 | 1.72e-02 | 5.56e+01 |  2.00e-02   |   2   |
    |  70   |  75   |  221  | +1.7663e+01 | 7.54e-02 | 1.31e+00 | 2.01e-02 | 5.56e+01 |  2.00e-02   |   2   |
    |  71   |  76   |  222  | +1.7485e+01 | 5.28e-01 | 1.29e+00 | 2.15e-04 | 5.56e+01 |  2.00e-02   |   2   |
    |  72   |  78   |  223  | +1.5963e+01 | 3.69e+00 | 1.15e+00 | 2.60e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  73   |  79   |  233  | +1.5963e+01 | 3.69e-01 | 1.15e+00 | 2.60e-03 | 5.56e+01 |  2.00e-02   |   4   |
    |  74   |  81   |  235  | +1.5963e+01 | 7.54e-02 | 1.15e+00 | 2.60e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  75   |  83   |  236  | +1.5755e+01 | 1.51e-01 | 1.13e+00 | 1.69e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  76   |  84   |  237  | +1.5339e+01 | 1.06e+00 | 1.08e+00 | 1.02e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  77   |  86   |  238  | +1.5339e+01 | 1.06e-01 | 1.08e+00 | 1.02e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  78   |  87   |  239  | +1.5059e+01 | 1.06e-01 | 1.04e+00 | 5.05e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  79   |  88   |  240  | +1.4816e+01 | 2.11e-01 | 1.00e+00 | 1.69e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  80   |  89   |  241  | +1.4326e+01 | 2.11e-01 | 9.19e-01 | 8.03e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  81   |  91   |  242  | +1.4326e+01 | 6.43e-02 | 9.19e-01 | 8.03e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  82   |  92   |  243  | +1.4196e+01 | 6.43e-02 | 8.94e-01 | 8.93e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  83   |  93   |  244  | +1.4094e+01 | 1.29e-01 | 8.66e-01 | 1.67e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  84   |  95   |  245  | +1.4094e+01 | 3.29e-02 | 8.66e-01 | 1.67e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  85   |  96   |  246  | +1.4033e+01 | 6.57e-02 | 8.49e-01 | 7.26e-04 | 5.56e+01 |  2.00e-02   |   2   |
    |  86   |  98   |  247  | +1.4033e+01 | 1.28e-02 | 8.49e-01 | 7.26e-04 | 5.56e+01 |  2.00e-02   |   2   |
    |  87   |  99   |  248  | +1.4010e+01 | 2.57e-02 | 7.06e-01 | 2.46e-04 | 5.56e+01 |  2.00e-02   |   2   |
    |  88   |  101  |  249  | +1.3970e+01 | 5.13e-02 | 6.19e-01 | 1.57e-04 | 5.56e+01 |  2.00e-02   |   2   |
    |  89   |  103  |  250  | +1.3896e+01 | 1.03e-01 | 7.01e-01 | 1.70e-04 | 5.56e+01 |  2.00e-02   |   2   |
    |  90   |  105  |  252  | +1.3896e+01 | 2.15e-02 | 7.01e-01 | 1.70e-04 | 5.56e+01 |  2.00e-02   |   2   |
    |  91   |  107  |  253  | +1.3864e+01 | 4.29e-02 | 5.92e-01 | 2.36e-04 | 5.56e+01 |  2.00e-02   |   2   |
    |  92   |  109  |  254  | +1.3805e+01 | 3.00e-01 | 6.57e-01 | 1.31e-04 | 5.56e+01 |  2.00e-02   |   2   |
    |  93   |  111  |  256  | +1.3380e+01 | 6.01e-01 | 7.61e-01 | 2.18e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  94   |  113  |  259  | +1.3380e+01 | 6.22e-02 | 7.61e-01 | 2.18e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  95   |  115  |  260  | +1.3380e+01 | 1.71e-02 | 7.61e-01 | 2.18e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  96   |  116  |  261  | +1.3356e+01 | 3.42e-02 | 5.93e-01 | 4.43e-04 | 5.56e+01 |  2.00e-02   |   2   |
    |  97   |  118  |  262  | +1.3318e+01 | 3.42e-02 | 6.77e-01 | 8.73e-04 | 5.56e+01 |  2.00e-02   |   2   |
    |  98   |  120  |  263  | +1.3283e+01 | 3.42e-02 | 6.92e-01 | 1.18e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  99   |  122  |  264  | +1.3247e+01 | 6.84e-02 | 6.69e-01 | 1.21e-03 | 5.56e+01 |  2.00e-02   |   2   |
    |  100  |  124  |  266  | +1.3247e+01 | 1.09e-02 | 6.69e-01 | 1.21e-03 | 5.56e+01 |  2.00e-02   |   2   |

    The maximum number of function evaluations is exceeded.
    Number of iterations: 100, function evaluations: 124, CG iterations: 266, optimality: 6.69e-01, constraint violation: 1.21e-03, execution time:  2.5 s.





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 6.770 seconds)


.. _sphx_glr_download_gallery_02-light_curve_inversion_egi_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: egi_optimization.ipynb <egi_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: egi_optimization.py <egi_optimization.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/04-environment/astro_spectra.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_04-environment_astro_spectra.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_04-environment_astro_spectra.py:


Astronomical Spectra
====================

A few useful spectra for simulating CCD measurements

.. GENERATED FROM PYTHON SOURCE LINES 7-51

.. code-block:: Python


    import os

    import matplotlib.pyplot as plt
    import numpy as np
    from astropy.io import fits

    import mirage as mr
    import mirage.vis as mrv

    ltest = np.linspace(300, 1050, int(1e4))

    tee = mr.atmospheric_transmission(ltest, 0, 0)
    ccd = mr.ChargeCoupledDevice(preset='pogs')
    qe = ccd.quantum_efficiency(ltest)
    zm = mr.proof_zero_mag_stellar_spectrum(ltest)
    sm = mr.sun_spectrum(ltest)

    ar = mr.airglow_radiance(ltest) * 1e-9


    labels = [
        ('Atmospheric transmission', 'nondim'),
        ('Solar spectrum', r'$\left[ \frac{W}{m^2 \cdot nm} \right]$'),
        ('Quantum efficiency', r'$\left[ \frac{W}{m^2 \cdot nm} \right]$'),
        ('Zero magnitude spectrum', r'$\left[ \frac{W}{m^2 \cdot nm } \right]$'),
        ('Airglow radiance', r'$\left[ \frac{W}{m^2 \cdot nm \cdot \text{ster}} \right]$'),
    ]

    specs = [tee, sm, qe, zm, ar]
    spectra_cols = [f'C{i}' for i in range(len(specs))]

    plt.figure(figsize=(8, 6))
    for i, (col, y) in enumerate(zip(spectra_cols, specs)):
        plt.subplot(2, 3, i + 1)
        plt.plot(ltest, y, color=col)
        plt.fill_between(ltest, y, color=col, alpha=0.1, label='_nolegend_')
        mrv.texit(labels[i][0], 'Wavelength [nm]', labels[i][1])
        plt.xlim(ltest.min(), ltest.max())
        plt.ylim(0, plt.ylim()[1])

    plt.tight_layout()
    plt.show()




.. image-sg:: /gallery/04-environment/images/sphx_glr_astro_spectra_001.png
   :alt: Atmospheric transmission, Solar spectrum, Quantum efficiency, Zero magnitude spectrum, Airglow radiance
   :srcset: /gallery/04-environment/images/sphx_glr_astro_spectra_001.png, /gallery/04-environment/images/sphx_glr_astro_spectra_001_2_00x.png 2.00x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 52-53

Loading and plotting the Vega (Alpha Lyrae) spectrum

.. GENERATED FROM PYTHON SOURCE LINES 53-87

.. code-block:: Python


    vega_spec_path = os.path.join(os.environ['DATADIR'], 'stars', 'alpha_lyr_mod_004.fits')
    if not os.path.exists(vega_spec_path):
        mr.save_file_from_url(
            'https://archive.stsci.edu/hlsps/reference-atlases/cdbs/current_calspec/alpha_lyr_mod_004.fits',
            os.path.join(os.environ['DATADIR'], 'stars'),
        )

    with fits.open(vega_spec_path) as hdul:
        # https://archive.stsci.edu/hlsps/reference-atlases/cdbs/current_calspec/
        data = np.vstack(hdul[1].data)
        lambdas = data[:, 0] / 10
        flux = data[:, 1]
        valid = (lambdas > 300) & (lambdas < 1200)
        flux = (
            flux[valid] / 1e2
        )  # converting from erg / s / cm^2 / Angstrom to W / m^2 / nm
        lambdas = lambdas[valid]
        np.savez(
            os.path.join(os.environ['DATADIR'], 'stars', 'vega_spectrum.npz'),
            lambdas=lambdas,
            flux=flux,
        )

    y = mr.vega_spectrum(lambdas)
    plt.plot(lambdas, y)
    plt.xlabel('Wavelength [nm]')
    plt.ylabel('Flux [W / m^2 / nm]')
    plt.title('Vega Spectrum')
    plt.grid()
    plt.xlim(300, 1200)
    plt.ylim(0, 1.02 * np.max(y))
    plt.tight_layout()
    plt.show()



.. image-sg:: /gallery/04-environment/images/sphx_glr_astro_spectra_002.png
   :alt: Vega Spectrum
   :srcset: /gallery/04-environment/images/sphx_glr_astro_spectra_002.png, /gallery/04-environment/images/sphx_glr_astro_spectra_002_2_00x.png 2.00x
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.940 seconds)


.. _sphx_glr_download_gallery_04-environment_astro_spectra.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: astro_spectra.ipynb <astro_spectra.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: astro_spectra.py <astro_spectra.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: astro_spectra.zip <astro_spectra.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

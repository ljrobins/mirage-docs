
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/04-environment/single_star_spectrum.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_04-environment_single_star_spectrum.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_04-environment_single_star_spectrum.py:


Vega and Apparent Magnitudes
============================

Computing the apparent magnitude of a star from its absolute flux spectrum in a given passband

.. GENERATED FROM PYTHON SOURCE LINES 7-17

.. code-block:: Python


    import os

    import matplotlib.pyplot as plt
    import numpy as np
    from astropy.io import fits
    from gaiaxpy import calibrate

    import mirage as mr








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Loading and plotting the Vega (Alpha Lyrae) spectrum

.. GENERATED FROM PYTHON SOURCE LINES 19-54

.. code-block:: Python


    vega_spec_path = os.path.join(os.environ['DATADIR'], 'stars', 'alpha_lyr_mod_004.fits')
    if not os.path.exists(vega_spec_path):
        mr.save_file_from_url(
            'https://archive.stsci.edu/hlsps/reference-atlases/cdbs/current_calspec/alpha_lyr_mod_004.fits',
            os.path.join(os.environ['DATADIR'], 'stars'),
        )

    with fits.open(vega_spec_path) as hdul:
        # https://archive.stsci.edu/hlsps/reference-atlases/cdbs/current_calspec/
        data = np.vstack(hdul[1].data)
        lambdas = data[:, 0] / 10
        flux = data[:, 1]
        valid = (lambdas > 300) & (lambdas < 1200)
        flux = (
            flux[valid] / 1e2
        )  # converting from erg / s / cm^2 / Angstrom to W / m^2 / nm
        lambdas = lambdas[valid]
        np.savez(
            os.path.join(os.environ['DATADIR'], 'stars', 'vega_spectrum.npz'),
            lambdas=lambdas,
            flux=flux,
        )

    y = mr.vega_spectrum(lambdas)
    plt.plot(lambdas, y)
    plt.xlabel('Wavelength [nm]')
    plt.ylabel('Flux [W / m^2 / nm]')
    plt.title('Vega Spectrum')
    plt.grid()
    plt.xlim(300, 1200)
    plt.ylim(0, 1.02 * np.max(y))
    plt.tight_layout()
    plt.show()




.. image-sg:: /gallery/04-environment/images/sphx_glr_single_star_spectrum_001.png
   :alt: Vega Spectrum
   :srcset: /gallery/04-environment/images/sphx_glr_single_star_spectrum_001.png, /gallery/04-environment/images/sphx_glr_single_star_spectrum_001_2_00x.png 2.00x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 55-57

Using precise fluxes for a given reference star
http://gaiaextra.ssdc.asi.it:8080/SPSSV2extendedfluxtable_user_show.php?sizelimit=150

.. GENERATED FROM PYTHON SOURCE LINES 57-107

.. code-block:: Python



    example_spec_path = os.path.join(os.environ['DATADIR'], 'stars', 'V2.SPSS001.ascii')
    if not os.path.exists(example_spec_path):
        mr.save_file_from_url(
            'http://gaiaextra.ssdc.asi.it:8080/reduced/2/SPSSpublic/V2.SPSS001.ascii',
            os.path.join(os.environ['DATADIR'], 'stars'),
        )

    star_id = 266077145295627520
    lam_true, flux_true, flux_err_true = np.loadtxt(example_spec_path).T
    mags = [
        ('V', 11.78),
        ('B', 11.46),
        ('R', 11.93098),
        ('I', 12.11202),
        ('G', 11.72116),
        ('G_BP', 11.54143),
        ('G_RP', 12.06725),
    ]

    plt.figure(figsize=(4, 6))
    for band_name, mag_true in mags:
        passband = mr.passband_by_name(lam_true, band_name)
        band_mag_from_true_spec = mr.apparent_magnitude_in_band(
            lam_true, flux_true, band_name
        )
        print(
            f'{band_name} magnitude: {band_mag_from_true_spec:.2f}, error {band_mag_from_true_spec-mag_true:.3f}'
        )

        plt.subplot(2, 1, 1)
        plt.plot(lam_true, passband, label=band_name)
        plt.subplot(2, 1, 2)
        plt.plot(lam_true, flux_true * passband, label=band_name)

    plt.subplot(2, 1, 1)
    plt.title('G191-B2B Spectra')
    plt.ylabel('Irradiance spectrum [W/m^2/nm]')
    plt.grid()
    plt.subplot(2, 1, 2)
    plt.grid()
    plt.plot(lam_true, flux_true, label='CALSPEC Raw')
    plt.xlabel('Wavelength [nm]')
    plt.ylabel('Irradiance spectrum [W/m^2/nm]')

    plt.legend()
    plt.tight_layout()
    plt.show()




.. image-sg:: /gallery/04-environment/images/sphx_glr_single_star_spectrum_002.png
   :alt: G191-B2B Spectra
   :srcset: /gallery/04-environment/images/sphx_glr_single_star_spectrum_002.png, /gallery/04-environment/images/sphx_glr_single_star_spectrum_002_2_00x.png 2.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    V magnitude: 11.76, error -0.016
    B magnitude: 11.46, error 0.004
    R magnitude: 11.90, error -0.031
    I magnitude: 12.08, error -0.032
    G magnitude: 11.64, error -0.085
    G_BP magnitude: 11.47, error -0.071
    G_RP magnitude: 12.03, error -0.037




.. GENERATED FROM PYTHON SOURCE LINES 108-109

Now let's use GAIA's calibrated spectra on a different star

.. GENERATED FROM PYTHON SOURCE LINES 109-148

.. code-block:: Python


    star_id = 5937173300407375616
    g_mag_true = 12.136271
    plt.figure(figsize=(4, 6))
    lam_cal = np.linspace(350, 1020, 20)
    spec = calibrate(
        [star_id],
        lam_cal,
        username=os.environ['COSMOS_USERNAME'],
        password=os.environ['COSMOS_PASSWORD'],
        save_file=False,
    )
    flux_cal = spec[0]['flux'][0]

    passband = mr.passband_by_name(lam_cal, 'G')
    band_mag_from_cal_spec = mr.apparent_magnitude_in_band(lam_cal, flux_cal, 'G')
    print(
        f'{band_name} magnitude: {band_mag_from_cal_spec:.2f}, error {band_mag_from_cal_spec-g_mag_true:.3f}'
    )

    plt.subplot(2, 1, 1)
    plt.plot(lam_cal, passband, label=band_name)
    plt.subplot(2, 1, 2)
    plt.plot(lam_cal, flux_cal * passband, label=band_name)


    plt.subplot(2, 1, 1)
    plt.title('G191-B2B Spectra')
    plt.ylabel('Irradiance spectrum [W/m^2/nm]')
    plt.grid()
    plt.subplot(2, 1, 2)
    plt.grid()
    plt.plot(lam_cal, flux_cal, label='GAIA XP Raw')
    plt.xlabel('Wavelength [nm]')
    plt.ylabel('Irradiance spectrum [W/m^2/nm]')

    plt.legend()
    plt.tight_layout()
    plt.show()



.. image-sg:: /gallery/04-environment/images/sphx_glr_single_star_spectrum_003.png
   :alt: G191-B2B Spectra
   :srcset: /gallery/04-environment/images/sphx_glr_single_star_spectrum_003.png, /gallery/04-environment/images/sphx_glr_single_star_spectrum_003_2_00x.png 2.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    INFO: Login to gaia TAP server [astroquery.gaia.core]
    INFO: OK [astroquery.utils.tap.core]
    INFO: Login to gaia data server [astroquery.gaia.core]
    INFO: OK [astroquery.utils.tap.core]
    Running query...    Running query... Done!    Reading input file...    Reading input file... Done!    Reading input file...    Reading input file... Done!    Calibrating data:   0%|          | 0/1 [00:00<?, ?spec/s]                                                             G_RP magnitude: 12.44, error 0.302





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 14.720 seconds)


.. _sphx_glr_download_gallery_04-environment_single_star_spectrum.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: single_star_spectrum.ipynb <single_star_spectrum.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: single_star_spectrum.py <single_star_spectrum.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

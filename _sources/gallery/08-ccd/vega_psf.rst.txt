
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/08-ccd/vega_psf.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_08-ccd_vega_psf.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_08-ccd_vega_psf.py:


Vega PSF
========

Plotting the point spread function of Vega

.. GENERATED FROM PYTHON SOURCE LINES 7-37

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np
    from matplotlib import colormaps

    import mirage as mr
    import mirage.vis as mrv

    station = mr.Station()
    catalog = mr.GaiaSpectralStarCatalog(station)
    info = mr.info_from_fits(
        '/Users/liamrobinson/Library/CloudStorage/OneDrive-purdue.edu/pogs/data_cal_qe/00168954.Mouse_click_position.fit',
    )

    cmap = colormaps['gray']

    plt.figure()
    im = plt.imshow(np.log10(info['ccd_adu']), cmap=cmap)
    im.set_clim(0, np.log10(station.telescope.ccd.full_well_capacity_adu - 2000))
    im.cmap.set_bad('k')
    im.cmap.set_over('m')

    plt.xlim(1430, 1690)
    plt.ylim(1232, 1028)
    mrv.texit('Vega', '', '', grid=False)
    plt.colorbar(
        cax=mrv.get_cbar_ax(), label=r'$\log_{10}\left[ \text{ADU} \right]$', extend='both'
    )
    # plt.show()




.. image-sg:: /gallery/08-ccd/images/sphx_glr_vega_psf_001.png
   :alt: Vega
   :srcset: /gallery/08-ccd/images/sphx_glr_vega_psf_001.png, /gallery/08-ccd/images/sphx_glr_vega_psf_001_2_00x.png 2.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.colorbar.Colorbar object at 0x31b0a1580>



.. GENERATED FROM PYTHON SOURCE LINES 38-39

Let's mask out the central portion of the signal

.. GENERATED FROM PYTHON SOURCE LINES 39-52

.. code-block:: Python

    image = info['ccd_adu'][1028:1232, 1430:1690].astype(np.float64)
    xx, yy = np.meshgrid(
        np.arange(image.shape[0]), np.arange(image.shape[1]), indexing='ij'
    )
    max_coords = np.round(
        [np.sum(xx * image / np.sum(image)), np.sum(yy * image / np.sum(image))]
    ).astype(int)
    r = np.sqrt((xx - max_coords[0]) ** 2 + (yy - max_coords[1]) ** 2)
    image = np.ma.array(image, mask=r < 15)

    plt.figure()
    plt.imshow(np.log10(image))
    plt.show()



.. image-sg:: /gallery/08-ccd/images/sphx_glr_vega_psf_002.png
   :alt: vega psf
   :srcset: /gallery/08-ccd/images/sphx_glr_vega_psf_002.png, /gallery/08-ccd/images/sphx_glr_vega_psf_002_2_00x.png 2.00x
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.367 seconds)


.. _sphx_glr_download_gallery_08-ccd_vega_psf.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: vega_psf.ipynb <vega_psf.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: vega_psf.py <vega_psf.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: vega_psf.zip <vega_psf.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/08-ccd/mapping_function.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_08-ccd_mapping_function.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_08-ccd_mapping_function.py:


Mapping Model
=============

Modeling the shape of the CCD image

.. GENERATED FROM PYTHON SOURCE LINES 9-10

It's important to understand where each pixel in the CCD originates from in the far field

.. GENERATED FROM PYTHON SOURCE LINES 10-40

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    import mirage as mr

    station = mr.Station()
    x, y = np.meshgrid(
        np.arange(station.telescope.ccd.sensor_pixels),
        np.arange(station.telescope.ccd.sensor_pixels),
    )
    mr.tic('Mapping')
    xd, yx = station.telescope.pixel_distortion(
        x,
        y,
        station.telescope.ccd.sensor_pixels // 2,
        station.telescope.ccd.sensor_pixels // 2,
    )
    mr.toc()

    dist = np.sqrt((x - xd) ** 2 + (y - yx) ** 2)

    plt.figure()
    plt.imshow(dist, cmap='cool')
    plt.colorbar(label='Apparent Distance from Pinhole Model [pix]')
    cp = plt.contour(dist, levels=[0.01, 0.1, 1, 2, 4, 7], colors='k')
    plt.clabel(cp, inline=True, fontsize=14)
    plt.title('POGS Pixel Distortion')
    plt.tight_layout()




.. image-sg:: /gallery/08-ccd/images/sphx_glr_mapping_function_001.png
   :alt: POGS Pixel Distortion
   :srcset: /gallery/08-ccd/images/sphx_glr_mapping_function_001.png, /gallery/08-ccd/images/sphx_glr_mapping_function_001_2_00x.png 2.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Mapping: 6.89e-01 seconds




.. GENERATED FROM PYTHON SOURCE LINES 41-42

Corner of the image principal lines

.. GENERATED FROM PYTHON SOURCE LINES 42-79

.. code-block:: Python

    look_dir = np.array([[1.0, 0.0, 0.0]])
    up_dir = np.array([[0.0, 0.0, 1.0]])

    plt.figure()
    for v in np.arange(0, 101, 10):
        px = np.arange(0, 101, 10)
        py = np.full_like(px, v)

        for x, y in zip([px, py], [py, px]):
            uvs = station.telescope.pixels_to_j2000_unit_vectors(
                look_dir, up_dir, np.vstack((x, y)).T
            )
            pxd, pyd = station.telescope.j2000_unit_vectors_to_pixels(
                look_dir, up_dir, uvs, add_distortion=True
            )
            kwargs = {}
            if v != 0 and v != 100:
                kwargs['alpha'] = 0.15
                plt.scatter(pxd, pyd, c='m', marker='+', **kwargs)
                plt.scatter(x, y, c='k', marker='+', **kwargs)
            plt.plot(x, y, c='k', **kwargs)
            plt.plot(pxd, pyd, c='m', **kwargs)

    plt.gca().invert_yaxis()
    plt.xlabel('x [pixels]')
    plt.ylabel('y [pixels]')
    plt.legend(
        ['Distorted', 'Undistorted'],
        loc='upper center',
        bbox_to_anchor=(0.5, 1.10),
        ncol=2,
        fancybox=True,
        shadow=True,
    )
    plt.xlabel('$x$ pixels')
    plt.ylabel('$y$ pixels')
    plt.show()



.. image-sg:: /gallery/08-ccd/images/sphx_glr_mapping_function_002.png
   :alt: mapping function
   :srcset: /gallery/08-ccd/images/sphx_glr_mapping_function_002.png, /gallery/08-ccd/images/sphx_glr_mapping_function_002_2_00x.png 2.00x
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.762 seconds)


.. _sphx_glr_download_gallery_08-ccd_mapping_function.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: mapping_function.ipynb <mapping_function.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: mapping_function.py <mapping_function.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: mapping_function.zip <mapping_function.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/08-ccd/bias_frame.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_08-ccd_bias_frame.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_08-ccd_bias_frame.py:


Bias Frames
===========

Characterizing the background bias of the POGS CCD

.. GENERATED FROM PYTHON SOURCE LINES 7-100



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gallery/08-ccd/images/sphx_glr_bias_frame_001.png
         :alt: bias frame
         :srcset: /gallery/08-ccd/images/sphx_glr_bias_frame_001.png, /gallery/08-ccd/images/sphx_glr_bias_frame_001_2_00x.png 2.00x
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gallery/08-ccd/images/sphx_glr_bias_frame_002.png
         :alt: Variance, Mean, Hot Pixels
         :srcset: /gallery/08-ccd/images/sphx_glr_bias_frame_002.png, /gallery/08-ccd/images/sphx_glr_bias_frame_002_2_00x.png 2.00x
         :class: sphx-glr-multi-img





.. code-block:: Python


    import datetime
    import os

    import matplotlib.pyplot as plt
    import numpy as np
    from astropy.io import fits

    import mirage as mr

    bias_frames_dir = (
        '/Users/liamrobinson/Library/CloudStorage/OneDrive-purdue.edu/pogs/bias_frames'
    )
    bias_fit_paths = [
        os.path.join(bias_frames_dir, x)
        for x in os.listdir(bias_frames_dir)
        if (('-20' in x or '_temp_' not in x) and 'bias' in x.lower())
    ]

    means = []
    vars = []
    dates = []
    mins = []
    temps = []
    data_betweens = []
    roi = (950, 1150)
    hot_count = []

    for bias_fit_path in bias_fit_paths:
        with fits.open(bias_fit_path) as hdul:
            data = hdul[0].data
            dates.append(
                datetime.datetime.strptime(
                    hdul[0].header['DATE-OBS'], '%Y-%m-%dT%H:%M:%S.%f'
                ).replace(tzinfo=datetime.timezone.utc)
            )

    bias_fit_paths = np.asarray(bias_fit_paths)[np.argsort(dates)]
    dates = np.sort(dates)

    for bias_fit_path in bias_fit_paths:
        with fits.open(bias_fit_path) as hdul:
            data = hdul[0].data
            temps.append(hdul[0].header['SET-TEMP'])

        dataf = data.flatten()
        hot_pixels = dataf > roi[1]
        dead_pixels = dataf < roi[0]
        is_ok = ~hot_pixels & ~dead_pixels
        data_betweens.append(dataf[is_ok])

        hot_count.append(hot_pixels.sum())

        mins.append(np.min(data))
        means.append(np.mean(data_betweens[-1]))
        vars.append(np.var(data_betweens[-1]))

    mins = np.array(mins)
    means = np.array(means)
    vars = np.array(vars)
    temps = np.array(temps)
    epyr = (mr.date_to_jd(dates) - mr.date_to_jd(dates).min()) / 365.25
    hot_count = np.array(hot_count)


    plt.figure()
    for date, data_between in zip(dates, data_betweens):
        y, x = plt.hist(data_between, bins=range(roi[0], roi[1]), alpha=0.2, density=True)[
            :2
        ]
        y_text = y.max()
        x_text = x[np.argmax(y)]
        plt.text(x_text, y_text - np.random.rand() * y_text / 10, date.strftime('%Y-%m-%d'))
    plt.xlabel('Bias signal [ADU]')
    plt.ylabel('Pixel value probability')
    plt.grid()

    plt.figure(figsize=(10, 3.5))
    plt.subplot(1, 3, 2)
    plt.plot(dates, vars, marker='+')
    plt.title('Variance')
    plt.grid()
    plt.subplot(1, 3, 1)
    plt.plot(dates, means, marker='+')
    plt.title('Mean')
    plt.grid()
    plt.subplot(1, 3, 3)
    plt.plot(dates, hot_count, marker='+')
    plt.title('Hot Pixels')
    plt.grid()
    plt.tight_layout()

    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.764 seconds)


.. _sphx_glr_download_gallery_08-ccd_bias_frame.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: bias_frame.ipynb <bias_frame.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: bias_frame.py <bias_frame.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: bias_frame.zip <bias_frame.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/08-ccd/convolution_streaks.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_08-ccd_convolution_streaks.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_08-ccd_convolution_streaks.py:


Convolution for Streaks
=======================

.. GENERATED FROM PYTHON SOURCE LINES 5-33

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    import mirage as mr
    import mirage.vis as mrv

    telescope = mr.Telescope(preset='pogs')
    telescope.sensor_pixels = 40
    telescope.pixel_scale = 0.05
    telescope.fwhm = (
        telescope.airy_disk_fwhm(550.0) * mr.AstroConstants.rad_to_arcsecond
    )  # arcseconds

    c_all = 10
    obj_pos = (20, 20)
    x_pix, y_pix = np.meshgrid(
        np.arange(telescope.sensor_pixels), np.arange(telescope.sensor_pixels)
    )
    r_dist = np.sqrt((x_pix - obj_pos[0] + 0.5) ** 2 + (y_pix - obj_pos[1] + 0.5) ** 2)
    theta_grid_rad = mr.dms_to_rad(0, 0, r_dist * telescope.pixel_scale)

    gaussian_pattern = telescope.gaussian_diffraction_pattern(
        c_all * 1 / 0.838, theta_grid_rad
    )
    kernel = mr.streak_convolution_kernel([1.0, 1.0], 30)
    res = mr.convolve_with_kernel(gaussian_pattern, kernel)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Let's look at the volume of both distributions

.. GENERATED FROM PYTHON SOURCE LINES 35-37

.. code-block:: Python

    print(f'Gaussian volume: {np.sum(gaussian_pattern):.4f}')





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Gaussian volume: 2105.0935




.. GENERATED FROM PYTHON SOURCE LINES 38-39

Visualize the Airy disk on the CCD grid

.. GENERATED FROM PYTHON SOURCE LINES 39-59

.. code-block:: Python

    plt.figure(figsize=(10, 4))
    plt.subplot(1, 3, 1)
    plt.imshow(
        gaussian_pattern,
        cmap='inferno',
    )
    mrv.texit('$\kappa(x,y)$', 'x [pixels]', 'y [pixels]', grid=False)
    plt.colorbar(cax=mrv.get_cbar_ax())
    plt.clim(0, np.max(gaussian_pattern))
    plt.subplot(1, 3, 2)
    mrv.texit('$T(\phi=\pi/4)$', '$j$', '$i$', grid=False)
    plt.imshow(kernel, cmap='gray')
    plt.colorbar(cax=mrv.get_cbar_ax())

    plt.subplot(1, 3, 3)
    plt.imshow(res, cmap='inferno')
    mrv.texit('$T(\phi=\pi/4) \star \kappa(x,y)$', 'x [pixels]', 'y [pixels]', grid=False)
    plt.colorbar(cax=mrv.get_cbar_ax())
    plt.tight_layout()
    plt.show()



.. image-sg:: /gallery/08-ccd/images/sphx_glr_convolution_streaks_001.png
   :alt: $\kappa(x,y)$, $T(\phi=\pi/4)$, $T(\phi=\pi/4) \star \kappa(x,y)$
   :srcset: /gallery/08-ccd/images/sphx_glr_convolution_streaks_001.png, /gallery/08-ccd/images/sphx_glr_convolution_streaks_001_2_00x.png 2.00x
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.359 seconds)


.. _sphx_glr_download_gallery_08-ccd_convolution_streaks.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: convolution_streaks.ipynb <convolution_streaks.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: convolution_streaks.py <convolution_streaks.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: convolution_streaks.zip <convolution_streaks.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/08-ccd/airy_disk_gaussian_fit.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_08-ccd_airy_disk_gaussian_fit.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_08-ccd_airy_disk_gaussian_fit.py:


Airy Disk Gaussian Fit
======================
Comparing the Airy disk diffraction pattern to its Gaussian approximation

.. GENERATED FROM PYTHON SOURCE LINES 6-20

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    import mirage as mr
    import mirage.vis as mrv

    telescope = mr.Telescope(preset='pogs')
    telescope.sensor_pixels = 400
    telescope.pixel_scale = 0.005
    telescope.fwhm = (
        telescope.airy_disk_fwhm(550) * mr.AstroConstants.rad_to_arcsecond
    )  # arcseconds








.. GENERATED FROM PYTHON SOURCE LINES 21-22

One dimensional falloff as a function of the distance from the center of the image

.. GENERATED FROM PYTHON SOURCE LINES 22-36

.. code-block:: Python

    c_all = 1000
    r_pix = np.linspace(0, telescope.sensor_pixels // 2, int(1e3))
    theta_arcsec = r_pix * telescope.pixel_scale
    theta_rad = mr.dms_to_rad(0, 0, theta_arcsec)
    airy_pattern = telescope.airy_disk_pattern(c_all, theta_rad, 550)
    gaussian_pattern = telescope.gaussian_diffraction_pattern(c_all, theta_rad)

    plt.figure(figsize=(6, 6))
    plt.plot(theta_arcsec, airy_pattern, label='Airy Disk')
    plt.plot(theta_arcsec, gaussian_pattern, label='Gaussian')
    mrv.texit('', 'Distance from center (arcseconds)', 'Normalized intensity')
    plt.legend()
    plt.show()




.. image-sg:: /gallery/08-ccd/images/sphx_glr_airy_disk_gaussian_fit_001.png
   :alt: airy disk gaussian fit
   :srcset: /gallery/08-ccd/images/sphx_glr_airy_disk_gaussian_fit_001.png, /gallery/08-ccd/images/sphx_glr_airy_disk_gaussian_fit_001_2_00x.png 2.00x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 37-38

Two dimensional renders

.. GENERATED FROM PYTHON SOURCE LINES 38-56

.. code-block:: Python


    obj_pos = (
        telescope.sensor_pixels // 2 + np.random.rand(),
        telescope.sensor_pixels // 2 + np.random.rand(),
    )
    x_pix, y_pix = np.meshgrid(
        np.arange(telescope.sensor_pixels), np.arange(telescope.sensor_pixels)
    )
    r_dist = np.sqrt((x_pix - obj_pos[0]) ** 2 + (y_pix - obj_pos[1]) ** 2)
    theta_grid_rad = mr.dms_to_rad(0, 0, r_dist * telescope.pixel_scale)

    mr.tic()
    airy_pattern = telescope.airy_disk_pattern(c_all, theta_grid_rad, 550)
    mr.toc()
    mr.tic()
    gaussian_pattern = telescope.gaussian_diffraction_pattern(c_all, theta_grid_rad)
    mr.toc()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Elapsed time: 3.12e-03 seconds
    Elapsed time: 6.81e-04 seconds




.. GENERATED FROM PYTHON SOURCE LINES 57-58

Let's look at the volume of both distributions

.. GENERATED FROM PYTHON SOURCE LINES 58-62

.. code-block:: Python

    print(f'Airy disk volume: {np.sum(airy_pattern):.4f}')
    print(f'Gaussian volume: {np.sum(gaussian_pattern):.4f}')






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Airy disk volume: 20326652.4509
    Gaussian volume: 17640683.4694




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Visualize the Airy disk on the CCD grid

.. GENERATED FROM PYTHON SOURCE LINES 64-85

.. code-block:: Python

    plt.figure(figsize=(8, 4))
    plt.subplot(1, 2, 1)
    plt.imshow(
        airy_pattern,
        cmap='inferno',
        extent=[x_pix.min(), x_pix.max(), y_pix.min(), y_pix.max()],
    )
    mrv.texit('Airy Diffraction', 'Pixels (x)', 'Pixels (y)', grid=False)
    plt.colorbar(label='Normalized intensity', cax=mrv.get_cbar_ax())
    plt.clim(0, np.max(airy_pattern))
    plt.subplot(1, 2, 2)
    plt.imshow(
        gaussian_pattern,
        cmap='inferno',
        extent=[x_pix.min(), x_pix.max(), y_pix.min(), y_pix.max()],
    )
    mrv.texit('Gaussian Diffraction', 'Pixels (x)', 'Pixels (y)', grid=False)
    plt.colorbar(label='Normalized intensity', cax=mrv.get_cbar_ax())
    plt.clim(0, np.max(airy_pattern))
    plt.tight_layout()
    plt.show()



.. image-sg:: /gallery/08-ccd/images/sphx_glr_airy_disk_gaussian_fit_002.png
   :alt: Airy Diffraction, Gaussian Diffraction
   :srcset: /gallery/08-ccd/images/sphx_glr_airy_disk_gaussian_fit_002.png, /gallery/08-ccd/images/sphx_glr_airy_disk_gaussian_fit_002_2_00x.png 2.00x
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.446 seconds)


.. _sphx_glr_download_gallery_08-ccd_airy_disk_gaussian_fit.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: airy_disk_gaussian_fit.ipynb <airy_disk_gaussian_fit.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: airy_disk_gaussian_fit.py <airy_disk_gaussian_fit.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: airy_disk_gaussian_fit.zip <airy_disk_gaussian_fit.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
